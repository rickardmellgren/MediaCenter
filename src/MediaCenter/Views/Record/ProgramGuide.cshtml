@*@model ProgramGuideVM[]*@
@model ProgramChannelVM
@using MediaCenter

<header>
    <style>
 
    </style>
</header>



<aside>

    @*@foreach (var item in Model.Programs)
        {
            @(item.Start + "  " + item.Id + "  " + item.OrderNo + "  " + item.Title + "  " + item.Channel + "  " + item.Description);
            <br />
        }*@


    @{ int timeScale = 5; }
    @{ DateTime timeNow = DateTime.Now;}
    @{ var LastShow = Model.Programs
                            .OrderByDescending(p => p.Stop)
                            .FirstOrDefault();}
   <table cellspacing="0">
        <tr>
            @for (int i = 0; i < 1000; i++)
            {
                if (i == 0)
                {
                    <td><div class="top" style="width: @Math.Round(timeScale * (timeNow.Date.AddHours(timeNow.Hour + (i + 1)) - timeNow).TotalMinutes)px">@timeNow.ToString("HH:mm")</div></td>
                }
                else if (timeNow.Date.AddHours(timeNow.Hour + (i + 1)) < LastShow.Stop)
                {
                    <td><div class="top" style="width: @Math.Round(timeScale * (timeNow.Date.AddHours(timeNow.Hour + (i + 1)) - timeNow.Date.AddHours(timeNow.Hour + i)).TotalMinutes)px">@timeNow.Date.AddHours(timeNow.Hour + i).ToString("HH:mm")</div></td>
                }
            }
        </tr>
    </table>

    @for (int i = 0; i < Model.Programs[Model.Programs.Length - 1].OrderNo; i++)
    {
        <table cellspacing="0">
            <tr>
                @for (int j = 0; j < Model.Programs.Length; j++)
                {
                    @if (Model.TvChannels[i].OrderNo == Model.Programs[j].OrderNo)
                    {
                        @if (j == 0 || Model.Programs[j - 1].OrderNo != Model.Programs[j].OrderNo)
                        {
                            @if (Model.Programs[j].Start < DateTime.Now && Model.Programs[j].Stop > DateTime.Now)
                            {
                                <td><div class="button" title="@Model.Programs[j].Title" style="width: @Math.Round(timeScale * Model.Programs[j].Stop.Subtract(DateTime.Now).TotalMinutes)px" onclick="location.href='@Url.Action($"Showinfo", "Record", new { id = @Model.Programs[j].Id })'">@Model.Programs[j].Start.ToString("HH:mm")-@Model.Programs[j].Stop.ToString("HH:mm") @Model.Programs[j].Title</div></td>
                            }
                            else
                            {
                                <td><div opacity="0" style="width: @Math.Round(timeScale * Model.Programs[j].Stop.Subtract(DateTime.Now).TotalMinutes)px"></div></td>
                            }
                        }
                        else
                        {
                                <td><div opacity="0" style="width: @Math.Round(timeScale * Model.Programs[j].Start.Subtract(Model.Programs[j - 1].Stop).TotalMinutes)px">&nbsp</div></td>
                                <td><div class="button" title="@Model.Programs[j].Title" style="width: @Math.Round(timeScale * Model.Programs[j].Stop.Subtract(Model.Programs[j].Start).TotalMinutes)px" onclick="location.href='@Url.Action($"Showinfo", "Record", new { id = @Model.Programs[j].Id })'">@Model.Programs[j].Start.ToString("HH:mm")-@Model.Programs[j].Stop.ToString("HH:mm") @Model.Programs[j].Title</div></td>
                        }


                    }
                }
            </tr>
        </table>
    }
</aside>

<section>
    <div id="channels">
        @Html.Partial("~/Views/Record/ChannelVM.cshtml", Model)
    </div>
</section>



<footer></footer>


